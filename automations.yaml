- alias: change_volume_chronopod
  trigger:
    platform: state
    entity_id: input_number.chronopod_volume
  action:
    service: rest_command.amixer_volume_slider

- alias: mute_volume_chronopod
  trigger:
    platform: state
    entity_id: input_boolean.chronopod_volume
  action:
    service: rest_command.amixer_volume_mute

- alias: plexamp_service_start_after_stop
  trigger:
    platform: state
    entity_id: switch.chronopod_plexamp_service
    to: "off"
  action:
    - delay:
        seconds: 2
    - service: switch.turn_on
      entity_id: switch.chronopod_plexamp_service

- alias: set_bluetooth_discoverable
  trigger:
    platform: state
    entity_id: input_boolean.chronopod_bluetooth_discoverable
  action:
    service: rest_command.bluetoothctl_discoverable_toggle

- alias: set_mintymcu_ir_mute
  trigger:
    platform: state
    entity_id: input_boolean.mintymcu_ir_mute
  action:
    - service: switch.toggle
      entity_id: switch.speakers_mute

- alias: set_mintymcu_ir_power
  trigger:
    platform: state
    entity_id: input_boolean.mintymcu_ir_power
  action:
    - service: switch.toggle
      entity_id: switch.speakers_power

- alias: set_last_ir_mute_trigger_time
  trigger:
    platform: state
    entity_id: binary_sensor.mintymcu_ir_volume_mute_trigger_sensor
    to: "on"
  action:
    - service: input_text.set_value
      entity_id: input_text.last_ir_mute_time
      data_template:
        value: "{{ now() | timestamp_local }}"

- alias: set_last_ir_power_trigger_time
  trigger:
    platform: state
    entity_id: binary_sensor.mintymcu_ir_power_trigger_sensor
    to: "on"
  action:
    - service: input_text.set_value
      entity_id: input_text.last_ir_power_time
      data_template:
        value: "{{ now() | timestamp_local }}"

- alias: update_ir_mute_power_time
  trigger:
    - platform: time_pattern
      minutes: '/1'
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.chronopod_last_muted
    - service: homeassistant.update_entity
      entity_id: sensor.chronopod_last_poweroff

- alias: save_panel_value
  trigger:
    platform: state
    entity_id: sensor.mintymcu_control_panel_rotary_encoder
  action:
    - service: input_number.set_value
      entity_id: input_number.mintymcu_panel_encoder_value_from
      data_template:
        value: "{{ trigger.from_state.state }}"
    - service: input_number.set_value
      entity_id: input_number.mintymcu_panel_encoder_value_to
      data_template:
        value: "{{ trigger.to_state.state }}"


- alias: execute_panel_encoder_value_increased
  trigger:
    - platform: template
      value_template: "
      {{ states('input_number.mintymcu_panel_encoder_value_from') < states('input_number.mintymcu_panel_encoder_value_to') }}
      "
  action:
    - service: switch.toggle
      entity_id: switch.speakers_volume_up

- alias: execute_panel_encoder_value_decreased
  trigger:
    - platform: template
      value_template: "
      {{ states('input_number.mintymcu_panel_encoder_value_from') > states('input_number.mintymcu_panel_encoder_value_to') }}
      "
  action:
    - service: switch.toggle
      entity_id: switch.speakers_volume_down

#- alias: recalibrate_panel_encoder_volume
#  trigger:
#    platform: state
#    entity_id: input_boolean.mintymcu_panel_encoder_recalibrate
#  action:
#    - service: switch.toggle
#      entity_id: switch.speakers_mute

- alias: execute_panel_upper_button_k0_toggle_switch_1
  trigger:
    platform: state
    entity_id: binary_sensor.mintymcu_control_panel_upper_button_k0
    to: "on"
  action:
    - service: switch.toggle
      entity_id: switch.hdmi_channel_1
#    - service: switch.toggle
#      entity_id: switch.mintymcu_control_panel_led

- alias: execute_panel_upper_button_k1_toggle_switch_2
  trigger:
    platform: state
    entity_id: binary_sensor.mintymcu_control_panel_upper_button_k1
    to: "on"
  action:
    - service: switch.toggle
      entity_id: switch.hdmi_channel_2

- alias: execute_panel_upper_button_k2_toggle_switch_3_pc
  trigger:
    platform: state
    entity_id: binary_sensor.mintymcu_control_panel_upper_button_k2
    to: "on"
  action:
    - service: switch.toggle
      entity_id: switch.hdmi_channel_3

- alias: execute_panel_upper_button_k3_toggle_switch_4_nintendo
  trigger:
    platform: state
    entity_id: binary_sensor.mintymcu_control_panel_upper_button_k3
    to: "on"
  action:
    - service: switch.toggle
      entity_id: switch.hdmi_channel_4

- alias: execute_panel_upper_button_k4_toggle_spdif_dac_1
  trigger:
    platform: state
    entity_id: binary_sensor.mintymcu_control_panel_upper_button_k4
    to: "on"
  action:
    - service: switch.toggle
      entity_id: switch.spdif_dac_1

- alias: execute_panel_upper_button_k5_toggle_spdif_dac_raspberry
  trigger:
    platform: state
    entity_id: binary_sensor.mintymcu_control_panel_upper_button_k5
    to: "on"
  action:
    - service: switch.toggle
      entity_id: switch.spdif_dac_raspberry

- alias: execute_panel_upper_button_k6_toggle_spdif_dac_extractor
  trigger:
    platform: state
    entity_id: binary_sensor.mintymcu_control_panel_upper_button_k6
    to: "on"
  action:
    - service: switch.toggle
      entity_id: switch.spdif_dac_extractor

- alias: execute_panel_upper_button_k7_toggle_spdif_dac_hdmi
  trigger:
    platform: state
    entity_id: binary_sensor.mintymcu_control_panel_upper_button_k7
    to: "on"
  action:
    - service: switch.toggle
      entity_id: switch.spdif_dac_hdmi

- alias: execute_panel_lower_button_k0_toggle_desklight
  trigger:
    platform: state
    entity_id: binary_sensor.mintymcu_control_panel_lower_button_k0
    to: "on"
  action:
    - service: switch.toggle
      entity_id: switch.mintymcu_rgb_desklight_default_color

- alias: execute_panel_lower_button_k7_toggle_mute
  trigger:
    platform: state
    entity_id: binary_sensor.mintymcu_control_panel_lower_button_k7
    to: "on"
  action:
    - service: switch.toggle
      entity_id: switch.speakers_mute
    - service: switch.toggle
      entity_id: switch.mintymcu_control_panel_led